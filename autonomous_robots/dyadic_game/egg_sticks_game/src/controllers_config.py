# **** Parameter vector organization ****
# n_features = 3; 
n_rsamples = 3;
n_fsamples = 2;
n_regimes = 2;
n_agents = 2;


# n_switch = n_agents*n_regimes #number of controllers
role_labels = ['Role 0(S): Force Stabilization', 'Role 1(T): Tracking']
# ctr_labels = ['A1Sw0', 'A1Sw1', 'A2Sw0', 'A2Sw1']
ftr_names = ['r', 'r\'', 'r\"', 'e', 'e\'', 'e\"', 'f', 'f\'', 'c']
# ftr_labels = n_switch*ftr_names


n_w = len(ftr_names) #int(n_samples*n_features+1) #+1 is the constant


ctrlr1 = [0. , 0. , 0. , 121.90, 62.95 , 1. , 0., 0., 0.] # small overshoot. 
# Poles at [-1-3.5j*pi -1+3.5j*pi -2] 
ctrlr2 = [0. , 0. , 0. , 46.41 , 15.60 , 2. , 0., 0., 0.] # medium overshoot. 
# Poles at [-1-1.5j*pi -1+1.5j*pi -4] 
ctrlr3 = [0. , 0. , 0. , 4. , 6. , 2. , 0., 0., 0.] # a bit slow. 
# Poles at [-2 -2 -2] 
ctrlr4 = [0. , 0. , 0. , 1.5 , 3.25 , 1.25 , 0., 0., 0.] # Slower. 
# Poles at [-2 -1.5 -1.] 

ctrlr5 = [0., 0.,  0., 32.608, 11.434,  3.0, 0., 0., 0.]


# Evolved from random with maximum of 100.
# ctrlr5 = [0., 0.,  0., 1.149, 16.482,  9.001, 0., 0., 0.] # Always keeps cursor to the left of the target
# Poles at [-18.19,  -1.73,  -0.0729]
ctrlr6 = [0., 0. , 0. , 7.352, 25.59 , 28.78 , 0., 0., 0.] # Takes a bit of time to follow well
# Poles at[-58.69, -0.43+0.249j, -0.433-0.249j]
ctrlr7 = [0., 0.,  0., 15.284, 17.612,  2.877, 0., 0., 0.] # Similar to ctrlr2
# Poles at [-3.33+4.10j -3.33-4.10j -1.09]

f_opt = 0.4
stblr1 = [0., 0., 0., 0., 0., 0., -1.*10, 0., f_opt*10] # fastest
stblr2 = [0., 0., 0., 0., 0., 0., -8, 0., f_opt*8] #
stblr3 = [0., 0., 0., 0., 0., 0., -1*4, 0., f_opt*4] # slowest
stblr4 = [0., 0., 0., 3., 0., 0., -1*8, 0., f_opt*8] # With a bit of tracking
stblr5 = [0., 0., 0., 0., 0., 0., -8, 0., f_opt*8] # copy of stblr2

param2ctr = None # Just index the ctrlist
ctrlist = [ctrlr1, ctrlr2, ctrlr3, ctrlr4, ctrlr5] # A list of prespecified controllers
stblrlist = [stblr1, stblr2, stblr3, stblr4, stblr5]

n_ctrlr_types = len(ctrlist) # The different kinds of controllers we have among the options


agent_decision_delay = 10 #refractory period in terms of time steps



# Candidate solutions
s1 = [-0.16833284131027837, 0.3484878245150793, 0.2488483455177434, 0.15534264140668974, 0.30853033878621816, 0.30130105479311864, 0.20747513224319916, -0.7194289794611676, 0.13253743937535475, 0.09678947076529665, -0.3148535851505569, -0.16753745655356397, 0.046284712343526754, -0.21948815844630165, 0.6937975084848153, -0.22048925144480783, -0.14294345189198718, -0.5125520162893515, 0.10639846087999977, 0.5461978365962343, 0.3640274137796724, 0.24724796733969578, -0.11436779814783193, 0.24216593457279284, 0.20314057244147035, 0.05233168695444088, 0.6172282760301808, 0.10769314760601151, -0.5577106759037302, -0.06414001286057948, 0.3833978736188928, 0.00579025883284662, 0.1653378906100097, -0.498189925447699, -0.07318103437904012, -0.4953123321878644, 3, 2, 3, 3]


s2 = [-0.1973321649827816, 0.7063645299049609, 0.0005840986603055949, -0.0023424233716088628, -0.08096069900016307, -0.20564835963292985, 0.08424842937166359, -0.5546277048367415, 0.3139231880739002, 0.09690528049774012, -0.6402784138686946, -0.06717229451123692, -0.10201693611974293, 0.2074651525523585, 0.6327028432042837, -0.06218072820292085, -0.23649965270808565, -0.25016023050643066, -0.032598769772885415, 0.6241703518336306, 0.10398574671651983, 0.4127326325611374, -0.1537891234684828, -0.3009372750137863, -0.3259777067271157, -0.2542676496496757, 0.37823219015410353, -0.13582943942994127, -0.8624718969141222, 0.016960752698121064, 0.13619610566902965, 0.0954919724475497, 0.23872874935289268, -0.10537816971207678, -0.2170472412352926, -0.3074595061740145, 4, 3, 1, 3]


s3 = [-0.3193421460582943, 0.3611637655243642, 0.35555752918110956, 0.6758801691641901, 0.24067098969744433, -0.07405612264132663, -0.016781279758136817, 0.25305068330573255, 0.23795603447259298, 0.35491013394169907, -0.3093945918525975, 0.10489965014724387, -0.14295337393035537, -0.07513640270292629, 0.26700942891391083, -0.6696524865376151, 0.02845131997871762, -0.46977732508514336, -0.2563322686454789, 0.6745675537760554, 0.3929420299764807, -0.06826229185246979, -0.29704262791767855, -0.054963114845930326, -0.07866666350057619, 0.021735530796881487, 0.4714584393067102, -0.18845138672381828, -0.4400617548489013, -0.1873501374687828, 0.1422602487745795, -0.20674523130833325, 0.5949503232434511, -0.21362893073469638, -0.05703931435482195, -0.5195126496487427, 3, 2, 0, 2]
sols = [s1, s2, s3]